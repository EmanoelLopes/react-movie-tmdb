// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Home /> should match snapshot 1`] = `
.c3 {
  font-size: 32px;
  margin: 25px 0;
  width: 100%;
  text-transform: uppercase;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 0 15px;
  position: relative;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 0 15px;
  position: relative;
  width: 100%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c5 {
  position: absolute;
  visibility: hidden;
}

.c5.tab-active {
  -webkit-animation: eMLfYp 1s;
  animation: eMLfYp 1s;
  position: relative;
  visibility: visible;
}

.c2 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 50%;
}

.c2.tab-active {
  color: #01d277;
}

.c6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: #01d277;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 100%;
  padding: 50px 0;
  width: 100%;
  z-index: 1;
}

.c6 span {
  font-size: 32px;
  margin-bottom: 15px;
}

.c6 svg {
  -webkit-animation: iVXCSc 1s linear infinite;
  animation: iVXCSc 1s linear infinite;
  color: #01d277;
  width: 5em !important;
  height: 5em;
}

@media (min-width:62em) {
  .c4 {
    max-width: 1280px;
  }
}

@media (min-width:62em) {
  .c1 {
    max-width: 1280px;
  }
}

<Root>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <Home
      loading={false}
    >
      <HomeContainer>
        <Connect(HeroSectionContainer)>
          <HeroSectionContainer
            dispatch={[Function]}
            loading={true}
            movies={Array []}
          />
        </Connect(HeroSectionContainer)>
        <styled.section>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": true,
                  "lastClassName": "c0",
                  "rules": Array [
                    "
  align-items: center;
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;
  width: 100%;
",
                  ],
                },
                "displayName": "styled.section",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "section",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <section
              className="c0"
            >
              <Styled(styled.div)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bxivhb",
                        "isStatic": true,
                        "lastClassName": "c1",
                        "rules": Array [
                          "
  display: flex;
  flex: 1;
  flex-direction: column;
  padding: 0 15px;
  position: relative;
  width: 100%;

  ",
                          "
    @media (min-width: ",
                          "62",
                          "em) {
      ",
                          "
    max-width: ",
                          "1280",
                          "px;
  ",
                          "
    }
  ",
                          "
",
                          "
  flex-direction: row;
  justify-content: space-between;
",
                        ],
                      },
                      "displayName": "Styled(styled.div)",
                      "foldedComponentIds": Array [
                        "sc-htpNat",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-bxivhb",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c1"
                  >
                    <TabPane
                      icon={
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f008",
                                "M488 64h-8v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V64H96v20c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12V64h-8C10.7 64 0 74.7 0 88v336c0 13.3 10.7 24 24 24h8v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h320v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h8c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24zM96 372c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm272 208c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm0-168c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm112 152c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z",
                              ],
                              "iconName": "film",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                      }
                      index={0}
                      isActive={true}
                      key="Popular movies"
                      label="Popular movies"
                      onClick={[Function]}
                    >
                      <styled.div
                        className="tab-pane tab-active"
                        index={0}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          className="tab-pane tab-active"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-EHOje",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  cursor: pointer;
  display: flex;
  width: 50%;

  &.tab-active {
    color: ",
                                  "#01d277",
                                  ";
  }
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-EHOje",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          index={0}
                          onClick={[Function]}
                        >
                          <div
                            className="tab-pane tab-active c2"
                            onClick={[Function]}
                          >
                            <styled.h1>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": true,
                                      "lastClassName": "c3",
                                      "rules": Array [
                                        "
  font-size: 32px;
  margin: 25px 0;
  width: 100%;
  text-transform: uppercase;
",
                                      ],
                                    },
                                    "displayName": "styled.h1",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": "h1",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <h1
                                  className="c3"
                                >
                                  Popular movies
                                   
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f008",
                                          "M488 64h-8v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V64H96v20c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12V64h-8C10.7 64 0 74.7 0 88v336c0 13.3 10.7 24 24 24h8v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h320v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h8c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24zM96 372c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm272 208c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm0-168c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm112 152c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z",
                                        ],
                                        "iconName": "film",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-film fa-w-16 "
                                      data-icon="film"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M488 64h-8v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V64H96v20c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12V64h-8C10.7 64 0 74.7 0 88v336c0 13.3 10.7 24 24 24h8v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h320v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h8c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24zM96 372c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm272 208c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm0-168c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm112 152c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </h1>
                              </StyledComponent>
                            </styled.h1>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </TabPane>
                    <TabPane
                      icon={
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                640,
                                512,
                                Array [],
                                "f26c",
                                "M592 0H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h245.1v32h-160c-17.7 0-32 14.3-32 32s14.3 32 32 32h384c17.7 0 32-14.3 32-32s-14.3-32-32-32h-160v-32H592c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-16 352H64V64h512v288z",
                              ],
                              "iconName": "tv",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                      }
                      index={1}
                      isActive={false}
                      key="Popular TV series"
                      label="Popular TV series"
                      onClick={[Function]}
                    >
                      <styled.div
                        className="tab-pane "
                        index={1}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          className="tab-pane "
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-EHOje",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  cursor: pointer;
  display: flex;
  width: 50%;

  &.tab-active {
    color: ",
                                  "#01d277",
                                  ";
  }
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-EHOje",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          index={1}
                          onClick={[Function]}
                        >
                          <div
                            className="tab-pane  c2"
                            onClick={[Function]}
                          >
                            <styled.h1>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": true,
                                      "lastClassName": "c3",
                                      "rules": Array [
                                        "
  font-size: 32px;
  margin: 25px 0;
  width: 100%;
  text-transform: uppercase;
",
                                      ],
                                    },
                                    "displayName": "styled.h1",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": "h1",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <h1
                                  className="c3"
                                >
                                  Popular TV series
                                   
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          640,
                                          512,
                                          Array [],
                                          "f26c",
                                          "M592 0H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h245.1v32h-160c-17.7 0-32 14.3-32 32s14.3 32 32 32h384c17.7 0 32-14.3 32-32s-14.3-32-32-32h-160v-32H592c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-16 352H64V64h512v288z",
                                        ],
                                        "iconName": "tv",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-tv fa-w-20 "
                                      data-icon="tv"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 640 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M592 0H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h245.1v32h-160c-17.7 0-32 14.3-32 32s14.3 32 32 32h384c17.7 0 32-14.3 32-32s-14.3-32-32-32h-160v-32H592c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-16 352H64V64h512v288z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </h1>
                              </StyledComponent>
                            </styled.h1>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </TabPane>
                  </div>
                </StyledComponent>
              </Styled(styled.div)>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htpNat",
                        "isStatic": true,
                        "lastClassName": "c4",
                        "rules": Array [
                          "
  display: flex;
  flex: 1;
  flex-direction: column;
  padding: 0 15px;
  position: relative;
  width: 100%;

  ",
                          "
    @media (min-width: ",
                          "62",
                          "em) {
      ",
                          "
    max-width: ",
                          "1280",
                          "px;
  ",
                          "
    }
  ",
                          "
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htpNat",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c4"
                  >
                    <Tab
                      content={
                        <Connect(MoviesContainer)
                          type="/movie/popular"
                        />
                      }
                      index={0}
                      isActive={true}
                      key="0"
                    >
                      <styled.section
                        className="tab-content tab-active"
                        key="0"
                        role="tab"
                      >
                        <StyledComponent
                          className="tab-content tab-active"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": true,
                                "lastClassName": "c5",
                                "rules": Array [
                                  "
  position: absolute;
  visibility: hidden;

  &.tab-active {
    animation: ",
                                  Keyframes {
                                    "id": "sc-keyframes-eMLfYp",
                                    "inject": [Function],
                                    "name": "eMLfYp",
                                    "rules": Array [
                                      "@-webkit-keyframes eMLfYp{from{opacity:0;}to{opacity:1;}}",
                                      "@keyframes eMLfYp{from{opacity:0;}to{opacity:1;}}",
                                    ],
                                    "toString": [Function],
                                  },
                                  " 1s;
    position: relative;
    visibility: visible;
  }
",
                                ],
                              },
                              "displayName": "styled.section",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "section",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          role="tab"
                        >
                          <section
                            className="tab-content tab-active c5"
                            role="tab"
                          >
                            <Connect(MoviesContainer)
                              type="/movie/popular"
                            >
                              <MoviesContainer
                                dispatch={[Function]}
                                getMovies={[Function]}
                                loading={true}
                                movies={Array []}
                                type="/movie/popular"
                              >
                                <Loading>
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-gzVnrw",
                                            "isStatic": true,
                                            "lastClassName": "c6",
                                            "rules": Array [
                                              "
  align-items: center;
  color: ",
                                              "#01d277",
                                              ";
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 100%;
  padding: 50px 0;
  width: 100%;
  z-index: 1;

  span {
    font-size: 32px;
    margin-bottom: 15px;
  }

  svg {
    animation: ",
                                              Keyframes {
                                                "id": "sc-keyframes-iVXCSc",
                                                "inject": [Function],
                                                "name": "iVXCSc",
                                                "rules": Array [
                                                  "@-webkit-keyframes iVXCSc{from{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                                                  "@keyframes iVXCSc{from{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                                                ],
                                                "toString": [Function],
                                              },
                                              " 1s linear infinite;
    color: ",
                                              "#01d277",
                                              ";
    width: 5em !important;
    height: 5em;

  }
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-gzVnrw",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6"
                                      >
                                        <span>
                                          Loading...
                                        </span>
                                        <FontAwesomeIcon
                                          border={false}
                                          className=""
                                          fixedWidth={false}
                                          flip={null}
                                          icon={
                                            Object {
                                              "icon": Array [
                                                512,
                                                512,
                                                Array [],
                                                "f110",
                                                "M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z",
                                              ],
                                              "iconName": "spinner",
                                              "prefix": "fas",
                                            }
                                          }
                                          inverse={false}
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size={null}
                                          spin={false}
                                          symbol={false}
                                          title=""
                                          transform={null}
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="svg-inline--fa fa-spinner fa-w-16 "
                                            data-icon="spinner"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            style={Object {}}
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z"
                                              fill="currentColor"
                                              style={Object {}}
                                            />
                                          </svg>
                                        </FontAwesomeIcon>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </Loading>
                              </MoviesContainer>
                            </Connect(MoviesContainer)>
                          </section>
                        </StyledComponent>
                      </styled.section>
                    </Tab>
                    <Tab
                      content={
                        <Connect(TVSeriesContainer)
                          type="/tv/popular"
                        />
                      }
                      index={1}
                      isActive={false}
                      key="1"
                    >
                      <styled.section
                        className="tab-content "
                        key="1"
                        role="tab"
                      >
                        <StyledComponent
                          className="tab-content "
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-ifAKCX",
                                "isStatic": true,
                                "lastClassName": "c5",
                                "rules": Array [
                                  "
  position: absolute;
  visibility: hidden;

  &.tab-active {
    animation: ",
                                  Keyframes {
                                    "id": "sc-keyframes-eMLfYp",
                                    "inject": [Function],
                                    "name": "eMLfYp",
                                    "rules": Array [
                                      "@-webkit-keyframes eMLfYp{from{opacity:0;}to{opacity:1;}}",
                                      "@keyframes eMLfYp{from{opacity:0;}to{opacity:1;}}",
                                    ],
                                    "toString": [Function],
                                  },
                                  " 1s;
    position: relative;
    visibility: visible;
  }
",
                                ],
                              },
                              "displayName": "styled.section",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-ifAKCX",
                              "target": "section",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          role="tab"
                        >
                          <section
                            className="tab-content  c5"
                            role="tab"
                          >
                            <Connect(TVSeriesContainer)
                              type="/tv/popular"
                            >
                              <TVSeriesContainer
                                dispatch={[Function]}
                                getSeries={[Function]}
                                loading={true}
                                tvSeries={Array []}
                                type="/tv/popular"
                              >
                                <Loading>
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-gzVnrw",
                                            "isStatic": true,
                                            "lastClassName": "c6",
                                            "rules": Array [
                                              "
  align-items: center;
  color: ",
                                              "#01d277",
                                              ";
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 100%;
  padding: 50px 0;
  width: 100%;
  z-index: 1;

  span {
    font-size: 32px;
    margin-bottom: 15px;
  }

  svg {
    animation: ",
                                              Keyframes {
                                                "id": "sc-keyframes-iVXCSc",
                                                "inject": [Function],
                                                "name": "iVXCSc",
                                                "rules": Array [
                                                  "@-webkit-keyframes iVXCSc{from{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                                                  "@keyframes iVXCSc{from{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                                                ],
                                                "toString": [Function],
                                              },
                                              " 1s linear infinite;
    color: ",
                                              "#01d277",
                                              ";
    width: 5em !important;
    height: 5em;

  }
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-gzVnrw",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6"
                                      >
                                        <span>
                                          Loading...
                                        </span>
                                        <FontAwesomeIcon
                                          border={false}
                                          className=""
                                          fixedWidth={false}
                                          flip={null}
                                          icon={
                                            Object {
                                              "icon": Array [
                                                512,
                                                512,
                                                Array [],
                                                "f110",
                                                "M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z",
                                              ],
                                              "iconName": "spinner",
                                              "prefix": "fas",
                                            }
                                          }
                                          inverse={false}
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size={null}
                                          spin={false}
                                          symbol={false}
                                          title=""
                                          transform={null}
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="svg-inline--fa fa-spinner fa-w-16 "
                                            data-icon="spinner"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            style={Object {}}
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z"
                                              fill="currentColor"
                                              style={Object {}}
                                            />
                                          </svg>
                                        </FontAwesomeIcon>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </Loading>
                              </TVSeriesContainer>
                            </Connect(TVSeriesContainer)>
                          </section>
                        </StyledComponent>
                      </styled.section>
                    </Tab>
                  </div>
                </StyledComponent>
              </styled.div>
            </section>
          </StyledComponent>
        </styled.section>
      </HomeContainer>
    </Home>
  </Provider>
</Root>
`;
