// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Movies /> should match snapshot 1`] = `
.c2 {
  font-size: 32px;
  margin: 25px 0;
  width: 100%;
  text-transform: uppercase;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 0 15px;
  width: 100%;
}

.c3 {
  background-color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 25px;
  padding: 25px;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c5 {
  text-align: center;
}

.c5 > a {
  color: #081c24;
  font-size: 18px;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c5 > a:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c5 > a.is-active {
  color: #01d277;
}

@media (min-width:62em) {
  .c1 {
    max-width: 1280px;
  }
}

@media (min-width:62em) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:62em) {
  .c4 {
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
}

@media (min-width:62em) {
  .c5 {
    margin-right: 15px;
  }
}

<Root>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <BrowserRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <withRouter(Movies)>
          <Route>
            <Movies
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
            >
              <styled.section>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bwzfXH",
                        "isStatic": true,
                        "lastClassName": "c0",
                        "rules": Array [
                          "
  align-items: center;
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;
  width: 100%;
",
                        ],
                      },
                      "displayName": "styled.section",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bwzfXH",
                      "target": "section",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <section
                    className="c0"
                  >
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-htpNat",
                              "isStatic": true,
                              "lastClassName": "c1",
                              "rules": Array [
                                "
  display: flex;
  flex: 1;
  flex-direction: column;
  padding: 0 15px;
  width: 100%;

  ",
                                "
    @media (min-width: ",
                                "62",
                                "em) {
      ",
                                "
    max-width: ",
                                "1280",
                                "px;
  ",
                                "
    }
  ",
                                "
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-htpNat",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c1"
                        >
                          <styled.h1>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": true,
                                    "lastClassName": "c2",
                                    "rules": Array [
                                      "
  font-size: 32px;
  margin: 25px 0;
  width: 100%;
  text-transform: uppercase;
",
                                    ],
                                  },
                                  "displayName": "styled.h1",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": "h1",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <h1
                                className="c2"
                              >
                                Movies
                              </h1>
                            </StyledComponent>
                          </styled.h1>
                          <SubNav
                            items={
                              Array [
                                Object {
                                  "link": "/movies/top-rated",
                                  "page": "Top Rated",
                                },
                                Object {
                                  "link": "/movies/popular",
                                  "page": "Popular",
                                },
                                Object {
                                  "link": "/movies/now-playing",
                                  "page": "Now Playing",
                                },
                                Object {
                                  "link": "/movies/up-coming",
                                  "page": "Up Coming",
                                },
                              ]
                            }
                          >
                            <styled.nav>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-dnqmqq",
                                      "isStatic": true,
                                      "lastClassName": "c3",
                                      "rules": Array [
                                        "
  background-color: ",
                                        "#fff",
                                        ";
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  margin-bottom: 25px;
  padding: 25px;

  ",
                                        "
    @media (min-width: ",
                                        "62",
                                        "em) {
      ",
                                        "
    flex-direction: row;
  ",
                                        "
    }
  ",
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.nav",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-dnqmqq",
                                    "target": "nav",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <nav
                                  className="c3"
                                >
                                  <styled.ul>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iwsKbI",
                                            "isStatic": true,
                                            "lastClassName": "c4",
                                            "rules": Array [
                                              "
  display: inline-flex;
  justify-content: space-between;

  ",
                                              "
    @media (min-width: ",
                                              "62",
                                              "em) {
      ",
                                              "
    justify-content: flex-start;
  ",
                                              "
    }
  ",
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.ul",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iwsKbI",
                                          "target": "ul",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <ul
                                        className="c4"
                                      >
                                        <styled.li
                                          key="0"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": true,
                                                  "lastClassName": "c5",
                                                  "rules": Array [
                                                    "
  text-align: center;

  ",
                                                    "
    @media (min-width: ",
                                                    "62",
                                                    "em) {
      ",
                                                    "
    margin-right: 15px;
  ",
                                                    "
    }
  ",
                                                    "

  > a {
    color: ",
                                                    "#081c24",
                                                    ";
    font-size: 18px;
    text-decoration: none;
  }

  > a:hover {
    text-decoration: underline;
  }

  > a.is-active {
    color: ",
                                                    "#01d277",
                                                    ";
  }
",
                                                  ],
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <li
                                              className="c5"
                                            >
                                              <NavLink
                                                activeClassName="is-active"
                                                aria-current="page"
                                                to="/movies/top-rated"
                                              >
                                                <Route
                                                  path="\\\\/movies\\\\/top-rated"
                                                >
                                                  <Link
                                                    aria-current={null}
                                                    replace={false}
                                                    to="/movies/top-rated"
                                                  >
                                                    <a
                                                      aria-current={null}
                                                      href="/movies/top-rated"
                                                      onClick={[Function]}
                                                    >
                                                      Top Rated
                                                    </a>
                                                  </Link>
                                                </Route>
                                              </NavLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          key="1"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": true,
                                                  "lastClassName": "c5",
                                                  "rules": Array [
                                                    "
  text-align: center;

  ",
                                                    "
    @media (min-width: ",
                                                    "62",
                                                    "em) {
      ",
                                                    "
    margin-right: 15px;
  ",
                                                    "
    }
  ",
                                                    "

  > a {
    color: ",
                                                    "#081c24",
                                                    ";
    font-size: 18px;
    text-decoration: none;
  }

  > a:hover {
    text-decoration: underline;
  }

  > a.is-active {
    color: ",
                                                    "#01d277",
                                                    ";
  }
",
                                                  ],
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <li
                                              className="c5"
                                            >
                                              <NavLink
                                                activeClassName="is-active"
                                                aria-current="page"
                                                to="/movies/popular"
                                              >
                                                <Route
                                                  path="\\\\/movies\\\\/popular"
                                                >
                                                  <Link
                                                    aria-current={null}
                                                    replace={false}
                                                    to="/movies/popular"
                                                  >
                                                    <a
                                                      aria-current={null}
                                                      href="/movies/popular"
                                                      onClick={[Function]}
                                                    >
                                                      Popular
                                                    </a>
                                                  </Link>
                                                </Route>
                                              </NavLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          key="2"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": true,
                                                  "lastClassName": "c5",
                                                  "rules": Array [
                                                    "
  text-align: center;

  ",
                                                    "
    @media (min-width: ",
                                                    "62",
                                                    "em) {
      ",
                                                    "
    margin-right: 15px;
  ",
                                                    "
    }
  ",
                                                    "

  > a {
    color: ",
                                                    "#081c24",
                                                    ";
    font-size: 18px;
    text-decoration: none;
  }

  > a:hover {
    text-decoration: underline;
  }

  > a.is-active {
    color: ",
                                                    "#01d277",
                                                    ";
  }
",
                                                  ],
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <li
                                              className="c5"
                                            >
                                              <NavLink
                                                activeClassName="is-active"
                                                aria-current="page"
                                                to="/movies/now-playing"
                                              >
                                                <Route
                                                  path="\\\\/movies\\\\/now-playing"
                                                >
                                                  <Link
                                                    aria-current={null}
                                                    replace={false}
                                                    to="/movies/now-playing"
                                                  >
                                                    <a
                                                      aria-current={null}
                                                      href="/movies/now-playing"
                                                      onClick={[Function]}
                                                    >
                                                      Now Playing
                                                    </a>
                                                  </Link>
                                                </Route>
                                              </NavLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          key="3"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": true,
                                                  "lastClassName": "c5",
                                                  "rules": Array [
                                                    "
  text-align: center;

  ",
                                                    "
    @media (min-width: ",
                                                    "62",
                                                    "em) {
      ",
                                                    "
    margin-right: 15px;
  ",
                                                    "
    }
  ",
                                                    "

  > a {
    color: ",
                                                    "#081c24",
                                                    ";
    font-size: 18px;
    text-decoration: none;
  }

  > a:hover {
    text-decoration: underline;
  }

  > a.is-active {
    color: ",
                                                    "#01d277",
                                                    ";
  }
",
                                                  ],
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <li
                                              className="c5"
                                            >
                                              <NavLink
                                                activeClassName="is-active"
                                                aria-current="page"
                                                to="/movies/up-coming"
                                              >
                                                <Route
                                                  path="\\\\/movies\\\\/up-coming"
                                                >
                                                  <Link
                                                    aria-current={null}
                                                    replace={false}
                                                    to="/movies/up-coming"
                                                  >
                                                    <a
                                                      aria-current={null}
                                                      href="/movies/up-coming"
                                                      onClick={[Function]}
                                                    >
                                                      Up Coming
                                                    </a>
                                                  </Link>
                                                </Route>
                                              </NavLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                      </ul>
                                    </StyledComponent>
                                  </styled.ul>
                                </nav>
                              </StyledComponent>
                            </styled.nav>
                          </SubNav>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <Switch />
                  </section>
                </StyledComponent>
              </styled.section>
            </Movies>
          </Route>
        </withRouter(Movies)>
      </Router>
    </BrowserRouter>
  </Provider>
</Root>
`;
