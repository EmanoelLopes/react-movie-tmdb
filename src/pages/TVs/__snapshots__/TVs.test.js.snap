// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TVs /> should match snapshot 1`] = `
.c2 {
  font-size: 32px;
  margin: 25px 0;
  width: 100%;
  text-transform: uppercase;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 0 15px;
  width: 100%;
}

.c3 {
  background-color: #fff;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 25px;
  margin-bottom: 25px;
}

.c4 {
  margin-right: 15px;
}

.c4 > a {
  color: #081c24;
  font-size: 18px;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c4 > a:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c4 > a.is-active {
  color: #01d277;
}

@media (min-width:62em) {
  .c1 {
    max-width: 1280px;
  }
}

@media (min-width:62em) {
  .c3 {
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
}

<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <TVs>
      <styled.section>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": true,
                "lastClassName": "c0",
                "rules": Array [
                  "
  align-items: center;
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;
  width: 100%;
",
                ],
              },
              "displayName": "styled.section",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "section",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <section
            className="c0"
          >
            <styled.div>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bxivhb",
                      "isStatic": true,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  display: flex;
  flex: 1;
  flex-direction: column;
  padding: 0 15px;
  width: 100%;

  ",
                        "
    @media (min-width: ",
                        "62",
                        "em) {
      ",
                        "
    max-width: ",
                        "1280",
                        "px;
  ",
                        "
    }
  ",
                        "
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bxivhb",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c1"
                >
                  <styled.h1>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bwzfXH",
                            "isStatic": true,
                            "lastClassName": "c2",
                            "rules": Array [
                              "
  font-size: 32px;
  margin: 25px 0;
  width: 100%;
  text-transform: uppercase;
",
                            ],
                          },
                          "displayName": "styled.h1",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bwzfXH",
                          "target": "h1",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <h1
                        className="c2"
                      >
                        TV Series
                      </h1>
                    </StyledComponent>
                  </styled.h1>
                  <SubNav
                    items={
                      Array [
                        Object {
                          "link": "/tvs/popular",
                          "page": "Popular",
                        },
                        Object {
                          "link": "/tvs/top-rated",
                          "page": "Top Rated",
                        },
                        Object {
                          "link": "/tvs/on-the-air",
                          "page": "On TV",
                        },
                        Object {
                          "link": "/tvs/airing-today",
                          "page": "Airing Today",
                        },
                      ]
                    }
                  >
                    <styled.ul>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-gZMcBi",
                              "isStatic": true,
                              "lastClassName": "c3",
                              "rules": Array [
                                "
  background-color: ",
                                "#fff",
                                ";
  display: inline-flex;
  justify-content: space-between;
  padding: 25px;
  margin-bottom: 25px;

  ",
                                "
    @media (min-width: ",
                                "62",
                                "em) {
      ",
                                "
  justify-content: flex-start;
  ",
                                "
    }
  ",
                                "
",
                              ],
                            },
                            "displayName": "styled.ul",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-gZMcBi",
                            "target": "ul",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <ul
                          className="c3"
                        >
                          <styled.li
                            key="0"
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-gqjmRU",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  margin-right: 15px;

  > a {
    color: ",
                                      "#081c24",
                                      ";
    font-size: 18px;
    text-decoration: none;
  }

  > a:hover {
    text-decoration: underline;
  }

  > a.is-active {
    color: ",
                                      "#01d277",
                                      ";
  }
",
                                    ],
                                  },
                                  "displayName": "styled.li",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-gqjmRU",
                                  "target": "li",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <li
                                className="c4"
                              >
                                <NavLink
                                  activeClassName="is-active"
                                  aria-current="page"
                                  to="/tvs/popular"
                                >
                                  <Route
                                    path="\\\\/tvs\\\\/popular"
                                  >
                                    <Link
                                      aria-current={null}
                                      replace={false}
                                      to="/tvs/popular"
                                    >
                                      <a
                                        aria-current={null}
                                        href="/tvs/popular"
                                        onClick={[Function]}
                                      >
                                        Popular
                                      </a>
                                    </Link>
                                  </Route>
                                </NavLink>
                              </li>
                            </StyledComponent>
                          </styled.li>
                          <styled.li
                            key="1"
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-gqjmRU",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  margin-right: 15px;

  > a {
    color: ",
                                      "#081c24",
                                      ";
    font-size: 18px;
    text-decoration: none;
  }

  > a:hover {
    text-decoration: underline;
  }

  > a.is-active {
    color: ",
                                      "#01d277",
                                      ";
  }
",
                                    ],
                                  },
                                  "displayName": "styled.li",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-gqjmRU",
                                  "target": "li",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <li
                                className="c4"
                              >
                                <NavLink
                                  activeClassName="is-active"
                                  aria-current="page"
                                  to="/tvs/top-rated"
                                >
                                  <Route
                                    path="\\\\/tvs\\\\/top-rated"
                                  >
                                    <Link
                                      aria-current={null}
                                      replace={false}
                                      to="/tvs/top-rated"
                                    >
                                      <a
                                        aria-current={null}
                                        href="/tvs/top-rated"
                                        onClick={[Function]}
                                      >
                                        Top Rated
                                      </a>
                                    </Link>
                                  </Route>
                                </NavLink>
                              </li>
                            </StyledComponent>
                          </styled.li>
                          <styled.li
                            key="2"
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-gqjmRU",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  margin-right: 15px;

  > a {
    color: ",
                                      "#081c24",
                                      ";
    font-size: 18px;
    text-decoration: none;
  }

  > a:hover {
    text-decoration: underline;
  }

  > a.is-active {
    color: ",
                                      "#01d277",
                                      ";
  }
",
                                    ],
                                  },
                                  "displayName": "styled.li",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-gqjmRU",
                                  "target": "li",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <li
                                className="c4"
                              >
                                <NavLink
                                  activeClassName="is-active"
                                  aria-current="page"
                                  to="/tvs/on-the-air"
                                >
                                  <Route
                                    path="\\\\/tvs\\\\/on-the-air"
                                  >
                                    <Link
                                      aria-current={null}
                                      replace={false}
                                      to="/tvs/on-the-air"
                                    >
                                      <a
                                        aria-current={null}
                                        href="/tvs/on-the-air"
                                        onClick={[Function]}
                                      >
                                        On TV
                                      </a>
                                    </Link>
                                  </Route>
                                </NavLink>
                              </li>
                            </StyledComponent>
                          </styled.li>
                          <styled.li
                            key="3"
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-gqjmRU",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  margin-right: 15px;

  > a {
    color: ",
                                      "#081c24",
                                      ";
    font-size: 18px;
    text-decoration: none;
  }

  > a:hover {
    text-decoration: underline;
  }

  > a.is-active {
    color: ",
                                      "#01d277",
                                      ";
  }
",
                                    ],
                                  },
                                  "displayName": "styled.li",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-gqjmRU",
                                  "target": "li",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <li
                                className="c4"
                              >
                                <NavLink
                                  activeClassName="is-active"
                                  aria-current="page"
                                  to="/tvs/airing-today"
                                >
                                  <Route
                                    path="\\\\/tvs\\\\/airing-today"
                                  >
                                    <Link
                                      aria-current={null}
                                      replace={false}
                                      to="/tvs/airing-today"
                                    >
                                      <a
                                        aria-current={null}
                                        href="/tvs/airing-today"
                                        onClick={[Function]}
                                      >
                                        Airing Today
                                      </a>
                                    </Link>
                                  </Route>
                                </NavLink>
                              </li>
                            </StyledComponent>
                          </styled.li>
                        </ul>
                      </StyledComponent>
                    </styled.ul>
                  </SubNav>
                </div>
              </StyledComponent>
            </styled.div>
            <Switch />
          </section>
        </StyledComponent>
      </styled.section>
    </TVs>
  </Router>
</BrowserRouter>
`;
